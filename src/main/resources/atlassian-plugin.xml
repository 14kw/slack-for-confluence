<atlassian-plugin key="${project.groupId}.${project.artifactId}" name="${project.name}" plugins-version="2">
    <plugin-info>
        <description>${project.description}</description>
        <version>${project.version}</version>
        <vendor name="${project.organization.name}" url="${project.organization.url}" />
        <param name="atlassian-data-center-compatible">true</param>
    </plugin-info>

    <!-- add our i18n resource -->
    <resource type="i18n" name="i18n" location="slack-for-confluence"/>
    
    <component-import key="applicationProperties" interface="com.atlassian.sal.api.ApplicationProperties" />
    
    <component name="Annotated Event Listener" key="annotated-listener"
               class="com.flaregames.slack.components.AnnotatedListener"/>

    <component-import name="Request Factory" key="request-factory" interface="com.atlassian.sal.api.net.RequestFactory" />
    <component-import name="Executor Factory" key="executor-factory" interface="com.atlassian.sal.api.executor.ThreadLocalDelegateExecutorFactory" />

    <component name="Configuration Manager"
               key="configurationManager"
               class="com.flaregames.slack.components.ConfigurationManager">
        <description>Stores the details of the configured Slack settings in Bandana</description>
    </component>

    <!-- Admin config -->
    <xwork name="slackConfigurationAction" key="slackConfigurationAction">
        <package name="slack-configure" extends="default" namespace="/admin">
            <default-interceptor-ref name="defaultStack"/>

            <action name="slack" class="com.flaregames.slack.actions.ViewConfigurationAction">
                <result name="success" type="velocity">/templates/slackadmin/configuration.vm</result>
            </action>
            <action name="doconfigure-slack" class="com.flaregames.slack.actions.SaveConfigurationAction">
                <interceptor-ref name="validatingStack"/>
                <param name="RequireSecurityToken">true</param>
                <result name="input" type="velocity">/templates/slackadmin/configuration.vm</result>
                <result name="error" type="velocity">/templates/slackadmin/configuration.vm</result>
                <result name="redirect" type="redirect">/spaces/slack.action?key=${spaceKey}</result>
                <result name="success" type="redirect">/admin/slack.action?result=success</result>
            </action>

        </package>
    </xwork>

    <web-item key="slack-configuration" name="Slack Configuration" section="system.admin/configuration"
              weight="1000">
        <description key="slack-configuration.name">Slack Configuration</description>
        <label key="slack-configuration.name"/>
        <link linkId="slack-configuration">/admin/slack.action</link>
        <condition class="com.atlassian.confluence.plugin.descriptor.web.conditions.ConfluenceAdministratorCondition"/>
    </web-item>

    <!-- Space config -->
    <xwork name="slackSpaceConfigurationAction" key="slackSpaceConfigurationAction">
        <package name="slack-space-configure" extends="default" namespace="/spaces">
            <default-interceptor-ref name="defaultStack"/>

            <action name="slack" class="com.flaregames.slack.actions.ViewSpaceConfigurationAction">
                <result name="success" type="velocity">/templates/slackadmin/space-config.vm</result>
            </action>
            <action name="doconfigure-slack" class="com.flaregames.slack.actions.SaveSpaceConfigurationAction">
                <interceptor-ref name="validatingStack"/>
                <param name="RequireSecurityToken">true</param>
                <result name="input" type="velocity">/templates/slackadmin/space-config.vm</result>
                <result name="error" type="velocity">/templates/slackadmin/space-config.vm</result>
                <result name="success" type="redirect">/spaces/slack.action?key=${key}&amp;result=success</result>
            </action>

        </package>
    </xwork>

    <web-item key="slack-space-configuration" name="Slack Space Configuration"
              section="system.space.admin/addons"
              weight="1000">
        <description key="slack-space-configuration.name">Slack Space Configuration</description>
        <label key="slack-space-configuration.name"/>
        <link linkId="slack-space-configuration">/spaces/slack.action?key=$generalUtil.urlEncode($space.key)</link>
        <icon height="16" width="16">
            <link absolute="true">
                $webResourceManager.getStaticPluginResource("${project.groupId}.${project.artifactId}:image-resources",
                "slack-icon-16x16.png")
            </link>
        </icon>
        <condition class="com.atlassian.confluence.plugin.descriptor.web.conditions.HasSpaceCondition"/>
        <condition class="com.atlassian.confluence.plugin.descriptor.web.conditions.SpacePermissionCondition">
            <param name="permission">administer</param>
        </condition>
        <condition class="com.atlassian.confluence.plugin.descriptor.web.conditions.NotPersonalSpaceCondition"/>
        <condition class="com.atlassian.confluence.plugin.descriptor.web.conditions.SpaceSidebarCondition" invert="true"/>
    </web-item>

    <web-item key="slack-space-configuration-2" name="Slack Space Configuration"
              section="system.space.tools/addons"
              weight="1000">
        <description key="slack-space-configuration.name">Slack Space Configuration</description>
        <label key="slack-space-configuration.name"/>
        <link linkId="slack-space-configuration">/spaces/slack.action?key=$generalUtil.urlEncode($space.key)</link>
        <icon height="16" width="16">
            <link absolute="true">
                $webResourceManager.getStaticPluginResource("${project.groupId}.${project.artifactId}:image-resources",
                "slack-icon-16x16.png")
            </link>
        </icon>
        <condition class="com.atlassian.confluence.plugin.descriptor.web.conditions.HasSpaceCondition"/>
        <condition class="com.atlassian.confluence.plugin.descriptor.web.conditions.SpacePermissionCondition">
            <param name="permission">administer</param>
        </condition>
        <condition class="com.atlassian.confluence.plugin.descriptor.web.conditions.NotPersonalSpaceCondition"/>
        <condition class="com.atlassian.confluence.plugin.descriptor.web.conditions.SpaceSidebarCondition"/>
    </web-item>
</atlassian-plugin>